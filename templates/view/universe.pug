extends ../layout.pug
include ../mixins.pug
include ../components/storyCard.pug

block title
  title #{universe.title}

mixin typeCard(shortname, category)
  .card.item-type
    a.cardLink( href=`${universeLink(universe.shortname)}/items${shortname ? `?type=${shortname}` : ''}` )
      div(style={ 'background-color': shortname ? category[2] : '#f3f3f3' })
        h2.mb-0(align='center')= shortname ? capitalize(category[1]) : T('All Items')
        h2.mt-0(align='center') (#{counts[shortname] || 0})
    if contextUser && (universe.author_permissions[contextUser.id] >= perms.WRITE)
      div
        a.cardBtn.link(href=`${universeLink(universe.shortname)}/items/create${shortname ? `?type=${shortname}` : ''}`) &#x2795; New
        a.cardBtn.link(href=`${ADDR_PREFIX}/items?author=${contextUser.username}&universe=${universe.shortname}${shortname ? `&type=${shortname}` : ''}`) My #{shortname ? category[1] : 'Items'}

block breadcrumbs
  if !displayUniverse  
    a.link.link-animated(href=`${ADDR_PREFIX}/`) #{T('Home')}
    |  / 
    a.link.link-animated(href=`${ADDR_PREFIX}/universes`) #{T('Universes')}
    |  / 
    span #{universe.title}

block scripts
  script
    include /static/scripts/tabs.js
    include /static/scripts/domUtils.js
    include /static/scripts/cardUtils.js
    include /static/scripts/fetchUtils.js
    include /static/scripts/markdown/parse.js
    include /static/scripts/markdown/render.js

block content
  h1.center #{universe.title}
  p#info-bar.center
    small Created by 
      if universe.owner
        a.link.link-animated( href=`${ADDR_PREFIX}/users/${universe.owner}` ) #{universe.owner}
      else
        | Deleted User
      |  #{formatDate(new Date(universe.created_at))}
      |  - Last updated #{formatDate(new Date(universe.updated_at))}
      if contextUser
        script!= `isFollowing = ${universe.followers[contextUser.id]};`
        script!= `universeShort = '${universe.shortname}';`
        |  - 
        a#follow-btn.link.link-animated
          if universe.followers[contextUser.id]
            | Unfollow
          else
            | Follow
          script.
            let isFollowing = false;
            const followBtn = document.getElementById('follow-btn');
            followBtn.addEventListener('click', async () => {
              isFollowing = !isFollowing;
              followBtn.classList.add('disabled');
              followBtn.classList.remove('link-broken');
              try {
                await putJSON(`/api/universes/${universeShort}/follow`, { isFollowing: isFollowing });
              } catch (err) {
                console.error(err);
                isFollowing = !isFollowing;
                followBtn.classList.add('link-broken');
              } finally {
                followBtn.innerText = isFollowing ? 'Unfollow' : 'Follow';
                followBtn.classList.remove('disabled');
              }
            });
        if universe.author_permissions[contextUser.id] >= perms.ADMIN
          |  - 
          a.link.link-animated(href=`${universeLink(universe.shortname)}/edit`) #{T('Edit')}
          |  - 
          a.link.link-animated(href=`${universeLink(universe.shortname)}/permissions`) #{T('Set Permissions')}
        if universe.author_permissions[contextUser.id] >= perms.OWNER
          |  - 
          a.link.link-animated(href=`${universeLink(universe.shortname)}/delete`) #{T('Delete')}

  hr

  //- Tab buttons
  ul.navbarBtns#tabBtns.gap-1.scroll-x
    if universe.obj_data.homeBody
      li.navbarBtn#bodyBtn(data-tab='home')
        h3.navbarBtnLink.navbarText(onclick=`showTab('home')`) #{T('Home')}
    li.navbarBtn#bodyBtn(data-tab='items')
      h3.navbarBtnLink.navbarText(onclick=`showTab('items')`) #{T('Items')}
    li.navbarBtn#bodyBtn(data-tab='authors')
      h3.navbarBtnLink.navbarText(onclick=`showTab('authors')`) #{T('Authors')}
    if !universe.public
      li.navbarBtn#bodyBtn(data-tab='viewers')
        h3.navbarBtnLink.navbarText(onclick=`showTab('viewers')`) #{T('Viewers')}
    if universe.discussion_enabled
      li.navbarBtn#bodyBtn(data-tab='discuss')
        h3.navbarBtnLink.navbarText(onclick=`showTab('discuss')`) #{T('Discuss')}
    if stories.length > 0 || (contextUser && universe.author_permissions[contextUser.id] >= perms.WRITE)
      li.navbarBtn#bodyBtn(data-tab='stories')
        h3.navbarBtnLink.navbarText(onclick=`showTab('stories')`) #{T('Stories')}

  .tabs
    .hidden( data-tab='home' )
      if universe.obj_data.homeBody
        .sheet
          #home-body
            script!= `window.content = ${JSON.stringify(universe.obj_data.homeBody)};`
            script.
              loadMarkdown(document.getElementById('home-body'), '#{universe.shortname}', window.content);

    .container.hidden( data-tab='items' )
      if universe.obj_data.cats && Object.keys(universe.obj_data.cats).length
        .type-card-container
          +typeCard(null, null)
          each category, shortname in universe.obj_data.cats
            +typeCard(shortname, category)
      else
        p No item types have been defined yet â€” 
          if contextUser && (universe.author_permissions[contextUser.id] >= perms.ADMIN)
            | go to the 
            a.link.link-animated(href=`${universeLink(universe.shortname)}/edit`) edit
            |  page to add some.
          else
            | #{T('ask the owner of this universe to add some.')}
    
    .hidden( data-tab='authors' )
      if contextUser && ((universe.author_permissions[contextUser.id] || 0) < perms.ADMIN)
        .d-flex.justify-center.gap-4.mb-2
          script.
            async function requestAccess(permissionLevel) {
              await putJSON('/api/universes/#{universe.shortname}/request', { permissionLevel });
              window.location.reload();
            }
          if contextUser && ((universe.author_permissions[contextUser.id] || 0) < perms.WRITE)
            button.button( type='submit' onclick=`requestAccess(${perms.WRITE})` disabled=hasRequested ) #{hasRequested ? T('Request Pending') : T('Request Write Access')}
          button.button( type='submit' onclick=`requestAccess(${perms.ADMIN})` disabled=hasRequested ) #{hasRequested ? T('Request Pending') : T('Request Admin Access')}
      .d-flex.justify-end.mb-2
        input( id='authorsearch' placeholder='Search...' )
        script.
          (() => {
            const searchBar = document.querySelector('#authorsearch');
            searchBar.addEventListener('change', () => {
              document.querySelectorAll('[data-tab=authors] .card-list .card').forEach(el => {
                el.classList.toggle('hidden', el.dataset.username.toLowerCase().indexOf(searchBar.value.toLowerCase()) === -1);
              });
            });
          })();
      .card-list
        each username, id in universe.authors
          if universe.author_permissions[id] >= perms.WRITE
            .card.sheet.gap-4(data-goto=`${ADDR_PREFIX}/users/${username}` data-username=username)
              img.userIcon(alt=username, src=authors[id].pfpUrl)
              .d-flex.flex-col.grow-1
                h2.ma-0
                  a.link.link-animated(href=`${ADDR_PREFIX}/users/${username}`) #{username}
                span
                  b #{T('Joined')}: 
                  | #{formatDate(authors[id].created_at)}
                span 
                  b #{T('Last seen')}: 
                  | #{formatDate(authors[id].updated_at)}
                span
                  b #{T('Items Owned')}: 
                  | #{authors[id].items_authored}
              .d-flex.flex-col.grow-1
                span.align-self-end.grow-1
                  if universe.author_permissions[id] === perms.ADMIN
                    | #{T('Admin')}
                  else if universe.author_permissions[id] === perms.OWNER
                    | #{T('Owner')}
    
    .hidden( data-tab='viewers' )
      .d-flex.justify-end.mb-2
        input( id='viewersearch' placeholder='Search...' )
        script.
          (() => {
            const searchBar = document.querySelector('#viewersearch');
            searchBar.addEventListener('change', () => {
              document.querySelectorAll('[data-tab=viewers] .card-list .card').forEach(el => {
                el.classList.toggle('hidden', el.dataset.username.toLowerCase().indexOf(searchBar.value.toLowerCase()) === -1);
              });
            });
          })();
      .card-list
        each username, id in universe.authors
          if universe.author_permissions[id] < perms.WRITE && universe.author_permissions[id] >= perms.READ
            .card.sheet.gap-4(data-goto=`${ADDR_PREFIX}/users/${username}` data-username=username)
              img.userIcon(alt=username, src=authors[id].pfpUrl)
              .d-flex.flex-col.grow-1
                h2.ma-0
                  a.link.link-animated(href=`${ADDR_PREFIX}/users/${username}`) #{username}
                span
                  b #{T('Joined')}: 
                  | #{formatDate(authors[id].created_at)}
                span 
                  b #{T('Last seen')}: 
                  | #{formatDate(authors[id].updated_at)}
    
    .hidden( data-tab='discuss' )
      if contextUser && universe.discussion_enabled && (universe.discussion_open || universe.author_permissions[id] >= perms.COMMENT)
        .d-flex.justify-between.align-baseline.mb-2
          a.link.link-animated( href=`${universeLink(universe.shortname)}/discuss/create` ) Create New
          input( id='threadsearch' placeholder='Search...' )
          script.
            (() => {
              const searchBar = document.querySelector('#threadsearch');
              searchBar.addEventListener('change', () => {
                document.querySelectorAll('[data-tab=discuss] .sheet').forEach(el => {
                  el.classList.toggle('hidden', el.dataset.thread.toLowerCase().indexOf(searchBar.value.toLowerCase()) === -1);
                });
              });
            })();
      .d-flex.flex-col.gap-4
        each thread in threads
          .sheet.d-flex.flex-col.gap-2.align-start( data-goto=`${universeLink(universe.shortname)}/discuss/${thread.id}` data-thread=thread.title )
            h2.ma-0
              a.link.link-animated( href=`${universeLink(universe.shortname)}/discuss/${thread.id}` ) #{thread.title}
            .d-flex.gap-4.flex-wrap
              span
                b #{T('Comments')}: 
                | #{thread.comment_count}
              span
                b #{T('Created')}: 
                | #{formatDate(thread.first_activity)}
              span 
                b #{T('Last activity')}: 
                | #{formatDate(thread.last_activity)}
    .hidden( data-tab='stories' )
      .card-list.mt-3
        if contextUser && universe.author_permissions[contextUser.id] >= perms.WRITE
          .card.sheet( data-goto=`${ADDR_PREFIX}/stories/create` )
            .d-flex.justify-center( style={ 'grid-column': '1 / 4' } )
              a.link.d-flex.justify-center( href=`${ADDR_PREFIX}/stories/create` )
                .navbarText.material-symbols-outlined.heavy.ma-0.pa-1.pr-0.grow-0( style={ 'font-size': '1.5rem' } onclick="showModal('new-tab-modal')" ) add
                .big-text.navbarText.pa-1.grow-0 #{T('New Story')}
        each story in stories
          +storyCard(story)
        
