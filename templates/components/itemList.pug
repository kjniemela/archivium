.card-list
  if universe && contextUser && universe.author_permissions[contextUser.id] >= perms.WRITE
    .card.sheet(data-goto=`${universeLink(universe.shortname || universe)}/items/create${type ? `?type=${type}` : ''}`)
      .d-flex.justify-center(style={ 'grid-column': '1 / 4' })
        a.link.d-flex.justify-center(href=`${universeLink(universe.shortname || universe)}/items/create${type ? `?type=${type}` : ''}`)
          .navbarText.material-symbols-outlined.heavy.ma-0.pa-1.pr-0.grow-0(style={ 'font-size': '1.5rem' }) add
          .big-text.navbarText.pa-1.grow-0 #{T('New')}
            if type && universe.obj_data
              |  #{capitalize(T(`${((universe.obj_data.cats || {})[type] || [, 'Missing Category'])[0]}`))}
            else
              |  #{T('Item')}
  each item in items
    -
      const itemLink = systemDisplayModes.includes(displayUniverse)
        ? `/${displayUniverse}/${item.shortname}`
        : `${universeLink(item.universe_short)}/items/${item.shortname}`;
    .card.sheet.gap-4.align-start(data-goto=itemLink)
      .d-flex.flex-col.grow-1
        h3.ma-0
          a.link.link-animated(href=itemLink) #{item.title}
        .d-flex.gap-1
          a.filter.link.link-animated(
            class={ 'link-selected': item.item_type == type }
            data-filter-key='type'
            data-filter-value=item.item_type
            title='Filter by type'
          ) #{capitalize(T(item.itemTypeName))}
        if showUniverse
          .d-flex.gap-1
            a.filter.link.link-animated(
              class={ 'link-selected': item.universe_short == universe }
              data-filter-key='universe'
              data-filter-value=item.universe_short
              title='Filter by universe'
            ) #{item.universe}

      .d-flex.flex-col.grow-3
          span 
            b #{T('Author')}: 
            if item.author
              a.link.link-animated(href=`${ADDR_PREFIX}/users/${item.author}`) #{item.author}
            else
              | #{T('Deleted User')}
          span 
            b #{T('Created')}: 
            | #{formatDate(item.created_at)}
          span 
            b #{T('Updated')}: 
            | #{formatDate(item.updated_at)}

      .d-flex.flex-wrap.gap-1.grow-4
        if item.tags
          each itemTag in item.tags
            if itemTag
              a.filter.link.link-animated(class={ 'link-selected': itemTag == tag } data-filter-key='tag' data-filter-value=itemTag) ##{itemTag} 

      if item.snippet && search
        .row-2(style={ 'grid-column': '1 / 3' })
          small
            i
              - const snippet = item.snippet
              +highlight(formatSnippet(snippet, item.match_pos >= 50, snippet.length === 100), search)
